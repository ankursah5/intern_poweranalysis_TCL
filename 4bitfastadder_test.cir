** 4bitfastadder_test **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: VAHINI
* Mon, Jun 08, 2020 23:07:03 
*

*## Multisim Component C6 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC6 HB1/C4 0 virtual_capC6
.subckt virtual_capC6 1 2
r1 1 2 1e30
c1 1 2 1e-015  IC=0
.ends

*## Multisim Component C5 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC5 HB1/S3 0 virtual_capC5
.subckt virtual_capC5 1 2
r1 1 2 1e30
c1 1 2 1e-015  IC=0
.ends

*## Multisim Component C3 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC3 HB1/S2 0 virtual_capC3
.subckt virtual_capC3 1 2
r1 1 2 1e30
c1 1 2 1e-015  IC=0
.ends

*## Multisim Component C2 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC2 HB1/S1 0 virtual_capC2
.subckt virtual_capC2 1 2
r1 1 2 1e30
c1 1 2 1e-015  IC=0
.ends

*## Multisim Component C1 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC1 HB1/S0 0 virtual_capC1
.subckt virtual_capC1 1 2
r1 1 2 1e30
c1 1 2 1e-015  IC=0
.ends

*## Multisim Component U48 ##*
xU48 HB1/C0 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=1000 Duty=50 Delay=0


*## Multisim Component U47 ##*
xU47 HB1/A1 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=8000 Duty=50 Delay=0


*## Multisim Component U46 ##*
xU46 HB1/B1 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=2000 Duty=50 Delay=0


*## Multisim Component U45 ##*
xU45 HB1/A2 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=4000 Duty=50 Delay=0


*## Multisim Component U43 ##*
xU43 HB1/B4 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=1000 Duty=50 Delay=0


*## Multisim Component U42 ##*
xU42 HB1/A4 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=2000 Duty=50 Delay=0


*## Multisim Component U37 ##*
xU37 HB1/B3 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=1000 Duty=50 Delay=0


*## Multisim Component U27 ##*
xU27 HB1/A3 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=2000 Duty=50 Delay=0


*## Multisim Component U26 ##*
xU26 HB1/B2 DIGITAL_CLOCK__DIGITAL_SOURCES__1 PARAMS: Frequency=1000 Duty=50 Delay=0



.subckt DIGITAL_CLOCK__DIGITAL_SOURCES__1 out PARAMS: Frequency=1k Duty=50 Delay=0
A1 out DigClock
.model DigClock d_clock (frequency={Frequency} duty={Duty/100} delay={Delay})
.ends



** 4bitfastadder **

*## Multisim Component U21 ##*
aU21  [15 11
+     13 29
+     HB3/and5_out] dU21.Y NOR2__TIL__1



xU21.Y dU21.Y HB1/C4 TIL_DRV__NON__1





*## Multisim Component U23 ##*
aU23 [17
+      10
+      14
+      28]
+      27 NOR2__TIL__1






*## Multisim Component U22 ##*
aU22_A  [22 9 12] 26 74LS02__74LS__1





*## Multisim Component U36 ##*
aU36_B  [HB3/I2 HB3/I5
+       HB3/I4 HB3/I3] 29 74LS08__74LS__1






*## Multisim Component U36 ##*
aU36_A  [HB3/I4 HB3/I3
+       HB3/I2 HB3/I1] 28 74LS08__74LS__1






*## Multisim Component U44 ##*
aU44_A  [16 8] 25 74LS02__74LS__1




*## Multisim Component U41 ##*
aU41_A  [21 
+        27] 
+       [dU41.1Y] 74LS136__74LS__1



xU41_A.1Y dU41.1Y HB1/S3 HB1/VCC HB1/GND TTL_LSDRVOC__NON__1


*## Multisim Component U40 ##*
aU40_A  [24 
+        26] 
+       [dU40.1Y] 74LS136__74LS__1



xU40_A.1Y dU40.1Y HB1/S2 HB1/VCC HB1/GND TTL_LSDRVOC__NON__1


*## Multisim Component U39 ##*
aU39_A  [19 
+        25] 
+       [dU39.1Y] 74LS136__74LS__1



xU39_A.1Y dU39.1Y HB1/S1 HB1/VCC HB1/GND TTL_LSDRVOC__NON__1


*## Multisim Component U38 ##*
aU38_A  [7 
+        5] 
+       [dU38.1Y] 74LS136__74LS__1



xU38_A.1Y dU38.1Y HB1/S0 HB1/VCC HB1/GND TTL_LSDRVOC__NON__1


*## Multisim Component U35 ##*
aU35_A  [HB3/I4 23] 24 74LS08__74LS__1




*## Multisim Component U34 ##*
aU34_B  3 23 74LS04__74LS__1



*## Multisim Component U11 ##*
aU11_A  [HB3/I2 6] 7 74LS08__74LS__1




*## Multisim Component U10 ##*
aU10_B  1 6 74LS04__74LS__1



*## Multisim Component U33 ##*
aU33  2 22 BUFFER__TIL__1



*## Multisim Component U32 ##*
aU32_A  [HB3/I5 20] 21 74LS08__74LS__1




*## Multisim Component U31 ##*
aU31_B  4 20 74LS04__74LS__1



*## Multisim Component U25 ##*
aU25_A  [HB3/I3 18] 19 74LS08__74LS__1




*## Multisim Component U24 ##*
aU24_B  2 18 74LS04__74LS__1



*## Multisim Component U20 ##*
aU20  3 17 BUFFER__TIL__1



*## Multisim Component U19 ##*
aU19  HB3/I2 16 BUFFER__TIL__1



*## Multisim Component U18 ##*
aU18  4 15 BUFFER__TIL__1



*## Multisim Component U17 ##*
aU17_A  [HB3/I2 HB3/I4 HB3/I3] 14 74LS08__74LS__1





*## Multisim Component U16 ##*
aU16_A  [2 HB3/I5 HB3/I4] 13 74LS08__74LS__1





*## Multisim Component U15 ##*
aU15_A  [HB3/I3 HB3/I2 HB3/I1] 12 74LS08__74LS__1





*## Multisim Component U11 ##*
aU11_B  [3 HB3/I5] 11 74LS08__74LS__1




*## Multisim Component U13 ##*
aU13_B  [2 HB3/I4] 10 74LS08__74LS__1




*## Multisim Component U14 ##*
aU14_A  [HB3/I2 HB3/I3] 9 74LS08__74LS__1




*## Multisim Component U12 ##*
aU12_A  [HB3/I2 HB3/I1] 8 74LS08__74LS__1




*## Multisim Component U5 ##*
aU5_B  HB3/I1 5 74LS04__74LS__1



*## Multisim Component U9 ##*
aU9_A  [HB1/B4 HB1/A4] 4 74LS02__74LS__1




*## Multisim Component U8 ##*
aU8_A  [HB1/B3 HB1/A3] 3 74LS02__74LS__1




*## Multisim Component U7 ##*
aU7_A  [HB1/B2 HB1/A2] 2 74LS02__74LS__1




*## Multisim Component U6 ##*
aU6_A  [HB1/B1 HB1/A1] 1 74LS02__74LS__1




*## Multisim Component U5 ##*
aU5_A  HB1/C0 HB3/I1 74LS04__74LS__1



*## Multisim Component U4 ##*
aU4_A  [HB1/B4 HB1/A4] HB3/I5 74LS00__74LS__1




*## Multisim Component U3 ##*
aU3_A  [HB1/B3 HB1/A3] HB3/I4 74LS00__74LS__1




*## Multisim Component U2 ##*
aU2_A  [HB1/B2 HB1/A2] HB3/I3 74LS00__74LS__1




*## Multisim Component U1 ##*
aU1_A  [HB1/B1 HB1/A1] HB3/I2 74LS00__74LS__1





.MODEL NOR2__TIL__1 d_nor ( rise_delay = 1n fall_delay = 1n)

.model 74LS136__74LS__1 d_chip ( behaviour= "
+; 74LS136 QUAD 2-INPUT XOR OPEN COLLECTOR
+/inputs  A  B
+/outputs  Y
+/table 4
+; A  B   Y
+  L  L   L
+  L  H   H
+  H  L   H
+  H  H   L
+/Conditional_Delay  8
+;event to  condition  output  min/max  time
+  LH    A   (B=L)       Y      max     30n
+  HL    A   (B=L)       Y      max     30n
+  LH    A   (B=H)       Y      max     30n
+  HL    A   (B=H)       Y      max     30n
+  LH    B   (A=L)       Y      max     30n
+  HL    B   (A=L)       Y      max     30n
+  LH    B   (A=H)       Y      max     30n
+  HL    B   (A=H)       Y      max     30n
+")

.SUBCKT TTL_LSDRVOC__NON__1 1 2 3 4
* Open Collector 1 = D/A input, 2 = out 3= VCC 4 = VSS(GND)
*#L1
aDAC1in  [1]  [5] aDAC1
.MODEL aDAC1 dac_bridge (out_low= 5.0 out_high = 0 out_undef = 0)
S1 2 0 5 0 sw1
.model sw1 vswitch(Von=5 Voff=4 Ron=1 Roff=100meg)
*#L1

.ENDS

.MODEL 74LS08__74LS__1 d_and  ( rise_delay = 15n fall_delay = 20n)

.MODEL 74LS04__74LS__1 d_inverter (rise_delay = 15n fall_delay = 15n)

.SUBCKT TIL_DRV__NON__1 1 2
* TIL Driver Model  1 = D/A input, 2 = out
 aDACin1 [1] [2] aDAC
.MODEL aDAC dac_bridge (out_low= 0 out_high = 5 out_undef = 2.5)
.ENDS

.MODEL BUFFER__TIL__1 d_buffer (rise_delay = 1n fall_delay = 1n)

.MODEL 74LS02__74LS__1 d_nor  ( rise_delay = 15n fall_delay = 15n)

.MODEL 74LS00__74LS__1 d_nand ( rise_delay = 15n fall_delay = 15n)



** 5inputAND **

*## Multisim Component U28 ##*
aU28_A  [HB2/and4_out HB3/I1] HB3/and5_out 74LS08__74LS__1






** 4 input AND gate **

*## Multisim Component U30 ##*
aU30_A  [30 31] HB2/and4_out 74LS02__74LS__1




*## Multisim Component U29 ##*
aU29_B  [HB3/I3 HB3/I2] 31 74LS00__74LS__1




*## Multisim Component U29 ##*
aU29_A  [HB3/I5 HB3/I4] 30 74LS00__74LS__1





